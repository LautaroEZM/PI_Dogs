{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\54113\\\\Desktop\\\\PI\\\\PI_Pokemon_LM\\\\client\\\\src\\\\components\\\\Cards\\\\Cards.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\njsx;\nfunction Cards(_ref) {\n  let {\n    dogs,\n    page,\n    pageSize,\n    setPage\n  } = _ref;\n  const pageCount = Math.ceil(dogs.length / pageSize);\n  const startIndex = page * pageSize;\n  const endIndex = startIndex + pageSize;\n  const currentDogs = dogs.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      pageCount: pageCount,\n      onPageChange: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_c = Cards;\nfunction Pagination(_ref2) {\n  let {\n    page,\n    pageCount,\n    onPageChange\n  } = _ref2;\n  const prevPage = page > 0 ? page - 1 : 0;\n  const nextPage = page + 1 < pageCount ? page + 1 : page;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(prevPage),\n      disabled: page === 0,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(nextPage),\n      disabled: page === pageCount - 1,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n// Actualizar estado de página\n_c2 = Pagination;\nfunction setPage(page) {\n  // actualizar state\n}\n\n// MapStateToProps\nconst mapStateToProps = state => ({\n  dogs: state.dogs,\n  page: state.page,\n  pageSize: 10\n});\n\n// MapDispatchToProps\nconst mapDispatchToProps = dispatch => ({\n  setPage: setPage\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"Cards\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"names":["jsx","Cards","_ref","dogs","page","pageSize","setPage","pageCount","Math","ceil","length","startIndex","endIndex","currentDogs","slice","_jsxDEV","children","Pagination","onPageChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","_ref2","prevPage","nextPage","className","onClick","disabled","_c2","mapStateToProps","state","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["C:/Users/54113/Desktop/PI/PI_Pokemon_LM/client/src/components/Cards/Cards.jsx"],"sourcesContent":["jsx\nfunction Cards({ dogs, page, pageSize, setPage }) {\n\n  const pageCount = Math.ceil(dogs.length / pageSize);\n\n  const startIndex = page * pageSize;\n  const endIndex = startIndex + pageSize;\n  const currentDogs = dogs.slice(startIndex, endIndex);\n\n  return (\n      <div>\n        {/* Renderizar currentDogs */}\n\n        <Pagination\n            page={page}\n            pageCount={pageCount}\n            onPageChange={setPage}\n        />\n      </div>\n  )\n}\n\nfunction Pagination({ page, pageCount, onPageChange }) {\n\n  const prevPage = page > 0 ? page - 1 : 0;\n  const nextPage = page + 1 < pageCount ? page + 1 : page;\n\n  return (\n      <div className=\"pagination\">\n        <button\n            onClick={() => onPageChange(prevPage)}\n            disabled={page === 0}\n        >\n          Prev\n        </button>\n\n        {/* Renderizar botones de página */}\n\n        <button\n            onClick={() => onPageChange(nextPage)}\n            disabled={page === pageCount - 1}\n        >\n          Next\n        </button>\n      </div>\n  )\n\n}\n\n// Actualizar estado de página\nfunction setPage(page) {\n  // actualizar state\n}\n\n// MapStateToProps\nconst mapStateToProps = state => ({\n  dogs: state.dogs,\n  page: state.page,\n  pageSize: 10\n});\n\n// MapDispatchToProps\nconst mapDispatchToProps = dispatch => ({\n  setPage: setPage\n});"],"mappings":";;AAAAA,GAAG;AACH,SAASC,KAAKA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC,IAAI;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAE9C,MAAMK,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACN,IAAI,CAACO,MAAM,GAAGL,QAAQ,CAAC;EAEnD,MAAMM,UAAU,GAAGP,IAAI,GAAGC,QAAQ;EAClC,MAAMO,QAAQ,GAAGD,UAAU,GAAGN,QAAQ;EACtC,MAAMQ,WAAW,GAAGV,IAAI,CAACW,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;EAEpD,oBACIG,OAAA;IAAAC,QAAA,eAGED,OAAA,CAACE,UAAU;MACPb,IAAI,EAAEA,IAAK;MACXG,SAAS,EAAEA,SAAU;MACrBW,YAAY,EAAEZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ;AAACC,EAAA,GAnBQtB,KAAK;AAqBd,SAASgB,UAAUA,CAAAO,KAAA,EAAoC;EAAA,IAAnC;IAAEpB,IAAI;IAAEG,SAAS;IAAEW;EAAa,CAAC,GAAAM,KAAA;EAEnD,MAAMC,QAAQ,GAAGrB,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC;EACxC,MAAMsB,QAAQ,GAAGtB,IAAI,GAAG,CAAC,GAAGG,SAAS,GAAGH,IAAI,GAAG,CAAC,GAAGA,IAAI;EAEvD,oBACIW,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAX,QAAA,gBACzBD,OAAA;MACIa,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACO,QAAQ,CAAE;MACtCI,QAAQ,EAAEzB,IAAI,KAAK,CAAE;MAAAY,QAAA,EACxB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAITP,OAAA;MACIa,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACQ,QAAQ,CAAE;MACtCG,QAAQ,EAAEzB,IAAI,KAAKG,SAAS,GAAG,CAAE;MAAAS,QAAA,EACpC;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGZ;;AAEA;AAAAQ,GAAA,GA3BSb,UAAU;AA4BnB,SAASX,OAAOA,CAACF,IAAI,EAAE;EACrB;AAAA;;AAGF;AACA,MAAM2B,eAAe,GAAGC,KAAK,KAAK;EAChC7B,IAAI,EAAE6B,KAAK,CAAC7B,IAAI;EAChBC,IAAI,EAAE4B,KAAK,CAAC5B,IAAI;EAChBC,QAAQ,EAAE;AACZ,CAAC,CAAC;;AAEF;AACA,MAAM4B,kBAAkB,GAAGC,QAAQ,KAAK;EACtC5B,OAAO,EAAEA;AACX,CAAC,CAAC;AAAC,IAAAiB,EAAA,EAAAO,GAAA;AAAAK,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAL,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}