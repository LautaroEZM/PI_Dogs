{"ast":null,"code":"import pokemonsSlice from './pokemons-slice';\nimport PokemonService from '../../service/pokemonService';\nexport const pokemonsActions = pokemonsSlice.actions;\nexport const reset = () => {\n  return (dispatch, getState) => {\n    dispatch(pokemonsActions.reset());\n  };\n};\nexport const searchPokemon = searchParams => {\n  return async (dispatch, getState) => {\n    dispatch(pokemonsActions.setLoading(true));\n    const response = await PokemonService.searchPokemon(searchParams);\n    dispatch(pokemonsActions.setPokemons(response));\n    dispatch(pokemonsActions.setLoading(false));\n  };\n};\nexport const getPokemon = pokemonId => {\n  return async (dispatch, getState) => {\n    var _getState$pokemons, _getState$pokemons$po;\n    if (((_getState$pokemons = getState().pokemons) === null || _getState$pokemons === void 0 ? void 0 : (_getState$pokemons$po = _getState$pokemons.pokemon) === null || _getState$pokemons$po === void 0 ? void 0 : _getState$pokemons$po.id) !== pokemonId) {\n      dispatch(pokemonsActions.setLoading(true));\n      const response = await PokemonService.getPokemon(pokemonId);\n      dispatch(pokemonsActions.setPokemon(response));\n      dispatch(pokemonsActions.setLoading(false));\n    }\n  };\n};\nexport const getPokemons = pokemonIds => {\n  return async (dispatch, getState) => {\n    dispatch(pokemonsActions.setLoading(true));\n    const promises = pokemonIds.map(pokemonId => PokemonService.getPokemon(pokemonId));\n    const responses = await Promise.all(promises);\n    dispatch(pokemonsActions.setPokemons(responses));\n    dispatch(pokemonsActions.setLoading(false));\n  };\n};","map":{"version":3,"names":["pokemonsSlice","PokemonService","pokemonsActions","actions","reset","dispatch","getState","searchPokemon","searchParams","setLoading","response","setPokemons","getPokemon","pokemonId","_getState$pokemons","_getState$pokemons$po","pokemons","pokemon","id","setPokemon","getPokemons","pokemonIds","promises","map","responses","Promise","all"],"sources":["C:/Users/54113/Desktop/PI/PI_Pokemon_LM/client/src/store/pokemons/pokemons-actions.js"],"sourcesContent":["import pokemonsSlice from './pokemons-slice';\nimport PokemonService from '../../service/pokemonService';\n\nexport const pokemonsActions = pokemonsSlice.actions;\n\nexport const reset = () => {\n  return (dispatch, getState) => {\n    dispatch(pokemonsActions.reset());\n  };\n};\n\nexport const searchPokemon = (searchParams) => {\n  return async (dispatch, getState) => {\n    dispatch(pokemonsActions.setLoading(true));\n    const response = await PokemonService.searchPokemon(searchParams);\n    dispatch(pokemonsActions.setPokemons(response));\n    dispatch(pokemonsActions.setLoading(false));\n  };\n};\n\nexport const getPokemon = (pokemonId) => {\n  return async (dispatch, getState) => {\n    if (getState().pokemons?.pokemon?.id !== pokemonId) {\n      dispatch(pokemonsActions.setLoading(true));\n      const response = await PokemonService.getPokemon(pokemonId);\n      dispatch(pokemonsActions.setPokemon(response));\n      dispatch(pokemonsActions.setLoading(false));\n    }\n  };\n};\n\nexport const getPokemons = (pokemonIds) => {\n  return async (dispatch, getState) => {\n    dispatch(pokemonsActions.setLoading(true));\n    const promises = pokemonIds.map((pokemonId) => PokemonService.getPokemon(pokemonId));\n    const responses = await Promise.all(promises);\n    dispatch(pokemonsActions.setPokemons(responses));\n    dispatch(pokemonsActions.setLoading(false));\n  };\n};\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,8BAA8B;AAEzD,OAAO,MAAMC,eAAe,GAAGF,aAAa,CAACG,OAAO;AAEpD,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACzB,OAAO,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC7BD,QAAQ,CAACH,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;EACnC,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,aAAa,GAAIC,YAAY,IAAK;EAC7C,OAAO,OAAOH,QAAQ,EAAEC,QAAQ,KAAK;IACnCD,QAAQ,CAACH,eAAe,CAACO,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAMC,QAAQ,GAAG,MAAMT,cAAc,CAACM,aAAa,CAACC,YAAY,CAAC;IACjEH,QAAQ,CAACH,eAAe,CAACS,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC/CL,QAAQ,CAACH,eAAe,CAACO,UAAU,CAAC,KAAK,CAAC,CAAC;EAC7C,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,SAAS,IAAK;EACvC,OAAO,OAAOR,QAAQ,EAAEC,QAAQ,KAAK;IAAA,IAAAQ,kBAAA,EAAAC,qBAAA;IACnC,IAAI,EAAAD,kBAAA,GAAAR,QAAQ,CAAC,CAAC,CAACU,QAAQ,cAAAF,kBAAA,wBAAAC,qBAAA,GAAnBD,kBAAA,CAAqBG,OAAO,cAAAF,qBAAA,uBAA5BA,qBAAA,CAA8BG,EAAE,MAAKL,SAAS,EAAE;MAClDR,QAAQ,CAACH,eAAe,CAACO,UAAU,CAAC,IAAI,CAAC,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMT,cAAc,CAACW,UAAU,CAACC,SAAS,CAAC;MAC3DR,QAAQ,CAACH,eAAe,CAACiB,UAAU,CAACT,QAAQ,CAAC,CAAC;MAC9CL,QAAQ,CAACH,eAAe,CAACO,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,WAAW,GAAIC,UAAU,IAAK;EACzC,OAAO,OAAOhB,QAAQ,EAAEC,QAAQ,KAAK;IACnCD,QAAQ,CAACH,eAAe,CAACO,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAMa,QAAQ,GAAGD,UAAU,CAACE,GAAG,CAAEV,SAAS,IAAKZ,cAAc,CAACW,UAAU,CAACC,SAAS,CAAC,CAAC;IACpF,MAAMW,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IAC7CjB,QAAQ,CAACH,eAAe,CAACS,WAAW,CAACa,SAAS,CAAC,CAAC;IAChDnB,QAAQ,CAACH,eAAe,CAACO,UAAU,CAAC,KAAK,CAAC,CAAC;EAC7C,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}