{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport titlesSlice from './titles/titles-slice';\nimport userSlice from './user/user-slice';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\nconst rootPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['titles']\n};\nconst userPersistConfig = {\n  key: 'user',\n  storage\n};\nconst rootReducer = combineReducers({\n  titles: titlesSlice.reducer,\n  user: persistReducer(userPersistConfig, userSlice.reducer)\n});\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","titlesSlice","userSlice","storage","persistReducer","persistStore","rootPersistConfig","key","blacklist","userPersistConfig","rootReducer","titles","reducer","user","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["C:/Users/54113/Desktop/PI/PI_Pokemon_LM/client/src/store/index.js"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport titlesSlice from './titles/titles-slice';\nimport userSlice from './user/user-slice';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\n\nconst rootPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['titles']\n};\n\nconst userPersistConfig = {\n  key: 'user',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  titles: titlesSlice.reducer,\n  user: persistReducer(userPersistConfig, userSlice.reducer),\n});\n\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAE5D,MAAMC,iBAAiB,GAAG;EACxBC,GAAG,EAAE,MAAM;EACXJ,OAAO;EACPK,SAAS,EAAE,CAAC,QAAQ;AACtB,CAAC;AAED,MAAMC,iBAAiB,GAAG;EACxBF,GAAG,EAAE,MAAM;EACXJ;AACF,CAAC;AAED,MAAMO,WAAW,GAAGX,eAAe,CAAC;EAClCY,MAAM,EAAEV,WAAW,CAACW,OAAO;EAC3BC,IAAI,EAAET,cAAc,CAACK,iBAAiB,EAAEP,SAAS,CAACU,OAAO;AAC3D,CAAC,CAAC;AAEF,MAAME,gBAAgB,GAAGV,cAAc,CAACE,iBAAiB,EAAEI,WAAW,CAAC;AAEvE,OAAO,MAAMK,KAAK,GAAGf,cAAc,CAAC;EAClCY,OAAO,EAAEE,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGd,YAAY,CAACU,KAAK,CAAC"},"metadata":{},"sourceType":"module"}